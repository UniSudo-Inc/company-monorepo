services:
  admin:
    container_name: admin
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  website:
    container_name: website
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  web:
    container_name: web
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  mobile:
    container_name: mobile
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  desktop:
    container_name: desktop
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  docs:
    container_name: docs
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  users:
    container_name: users
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    volumes:
      - .:/workspace:cached
    depends_on:
      - db
      - casdoor
    command: sleep infinity
  storybook:
    image: mcr.microsoft.com/devcontainers/typescript-node:20
    container_name: storybook
    volumes:
      - .:/workspace:cached
    command: sleep infinity
  db:
    container_name: db
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_MULTIPLE_DATABASES=casdoor
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
  casdoor:
    image: casbin/casdoor:latest
    container_name: casdoor
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - driverName=postgres
      - dataSourceName=user=casdoor password=postgres host=db port=5432 sslmode=disable dbname=casdoor
      - dbName=casdoor
      - runmode=dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  localstack:
    image: localstack/localstack-pro:latest
    restart: unless-stopped
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
      - "443:443"
    environment:
      - LOCALSTACK_API_KEY=
      - DEBUG=1
      - PERSISTENCE=1
    volumes:
      - localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4566 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pgdata:
  localstack:
