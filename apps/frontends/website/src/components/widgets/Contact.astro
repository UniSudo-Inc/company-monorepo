---
import FormContainer from '@/components/ui/Form.astro';
import Headline from '@/components/ui/Headline.astro';
import WidgetWrapper from '@/components/ui/WidgetWrapper.astro';
import type { Contact as Props } from '@/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  inputs,
  textarea,
  disclaimer,
  button,
  description,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.['container'] ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  {
    inputs && (
      <div class='mx-auto flex w-full max-w-xl flex-col rounded-lg border border-gray-200 bg-white p-4 shadow backdrop-blur dark:border-gray-700 dark:bg-slate-900 sm:p-6 lg:p-8'>
        <FormContainer
          inputs={inputs}
          textarea={textarea}
          disclaimer={disclaimer}
          button={button}
          description={description}
        />
      </div>
    )
  }

  <div
    id='snackbar'
    class='toast button-6 fixed right-12 z-10 rounded-md border bg-white p-4 shadow-lg dark:bg-slate-900'
    hidden
  >
  </div>
</WidgetWrapper>

<script>
  function toast(message: string) {
    const toastElem = document.getElementById('snackbar');
    toastElem!.innerText = message;
    toastElem!.hidden = false;
    setTimeout(() => {
      toastElem!.hidden = true;
      toastElem!.innerText = '';
    }, 3000);
  }

  const button = document.querySelector('button[type="submit"]');
  const form = document.querySelector('form');

  if (button && form) {
    button.addEventListener('click', (event) => {
      const formData = new FormData(form!);
      fetch(`${import.meta.env.PUBLIC_USER_API_BASE_URL}/v1/wishlist`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(formData)),
      }).then((res) => {
        // FIXME: i18n
        if (res.status === 200) {
          toast('提交成功');
          button.setAttribute('disabled', '');
        } else if (res.status === 409) {
          toast('用户已存在');
        } else {
          toast('提交失败');
        }
      });
      event.preventDefault();
    });
  }
</script>
