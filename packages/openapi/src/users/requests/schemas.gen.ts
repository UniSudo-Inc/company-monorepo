// This file is auto-generated by @hey-api/openapi-ts

export const $GetUserResponse = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            description: 'The ID of the user',
            examples: ['1']
        },
        name: {
            type: 'string',
            description: 'The name of the user',
            examples: ['John Doe']
        },
        email: {
            type: 'string',
            description: 'The email of the user',
            examples: ['john.doe@example.com']
        },
        role: {
            type: 'string',
            enum: ['admin', 'customer'],
            description: 'The role of the user',
            examples: ['admin']
        },
        createdAt: {
            type: 'string',
            description: 'The created at date of the user',
            examples: ['2021-01-01T00:00:00Z']
        },
        updatedAt: {
            type: 'string',
            description: 'The updated at date of the user',
            examples: ['2021-01-01T00:00:00Z']
        }
    },
    required: ['id', 'name', 'email', 'role', 'createdAt', 'updatedAt']
} as const;

export const $ErrorResponse = {
    type: 'object',
    properties: {
        code: {
            type: 'string',
            description: 'The code of the error',
            examples: ['0123']
        },
        status: {
            type: 'number',
            description: 'The status code of the error',
            examples: [500, 409, 404, 422]
        },
        title: {
            type: 'string',
            description: 'The title of the error',
            examples: ['NotFoundError', 'ConflictError', 'InternalServerError', 'UnprocessableEntityError']
        },
        detail: {
            type: 'string',
            description: 'The detail of the error',
            examples: ['The user with the id 1 was not found', 'The user with the email john.doe@example.com already exists']
        },
        source: {
            type: 'object',
            properties: {
                pointer: {
                    type: 'string'
                },
                parameter: {
                    type: 'string'
                },
                header: {
                    type: 'string'
                }
            },
            description: 'The source of the error',
            examples: [
                {
                    pointer: '/data/attributes/name'
                },
                {
                    parameter: 'email'
                },
                {
                    header: 'Authorization'
                }
            ]
        }
    },
    required: ['status', 'title', 'detail']
} as const;